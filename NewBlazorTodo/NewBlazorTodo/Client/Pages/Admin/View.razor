@page "/admin/details/{adminId:int}"
@inject HttpClient client
@inject NavigationManager uriHelper
@inject IJSRuntime js


<table id="customers" class="table table-bordered table-danger">
    <tr id="testing"></tr>
    <tr><th>Id: @admin.Id</th></tr>
    <tr><th>Förnamn: @admin.FirstName</th></tr>
    <tr><th>Efternamn: @admin.LastName</th></tr>
    <tr><th>Epost: @admin.Email</th></tr>
    <tr><th>Telefonnummer: @admin.Phone</th></tr>
    <tr><th>Användarnamn: @admin.UserName</th></tr>
    <tr><th>Lösenord: @admin.Password</th></tr>

</table>

    <div class="BackButton">
        <button class="btn btn-dark" @onclick="@GetBackOnePage">Tillbaks till admins</button>
        <a class="btn btn-success" href="admin/edit/@admin.Id">Edit</a>
        <button class="btn btn-danger" @onclick="@(() => Delete(admin.Id))">Ta bort @admin.FirstName</button>
    </div>


@code{
    [Parameter] public int adminId { get; set; }
    Admins admin = new Admins();

    protected override async Task OnInitializedAsync()
    {
        admin = await client.GetFromJsonAsync<Admins>($"https://localhost:44374/api/admins/ {adminId}");
    }

    public void GetBackOnePage()
    {
        uriHelper.NavigateTo("admin");
    }

    async Task Delete(int adminId)
    {
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {admin.FirstName}'s ({admin.Id}) Record?"))
        {
            await client.DeleteAsync($"https://localhost:44374/api/admins/ {adminId}");
            GetBackOnePage();
        }
    }
}
