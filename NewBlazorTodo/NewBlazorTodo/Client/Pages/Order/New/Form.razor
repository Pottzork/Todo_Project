@inject NavigationManager uriHelper
<EditForm Model="@order" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <div class="col-sm-3">
            <InputSelect id="OperatorTempId" @bind-Value="OperatorTempId" class="form-control">
                @foreach (var op in operatorsList)
                {
                    <option value="@op.Id">@op.FirstName</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="form-group">
        <label>Arbetsbeskrivning :</label>
        <div>
            <InputText @bind-Value="@order.orderDescription" />
            <ValidationMessage For="@(() => order.orderDescription)" />
        </div>
    </div>

    <div class="form-group ">
        <div>
            <label>Startdatum för arbetsorder :</label>
            <div>
                <InputDate @bind-Value="@order.orderStart" />
                <ValidationMessage For="@(() => order.orderStart)" />
            </div>
        </div>
    </div>

    <div class="form-group ">
        <div>
            <label>Övrig information :</label>
            <div>
                <InputText @bind-Value="@order.orderInfo" />
                <ValidationMessage For="@(() => order.orderInfo)" />
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3">
            <InputSelect id="customers" @bind-Value="CustomerTempId" class="form-control">
                @foreach (var op in customersList)
                {
                    <option value="@op.Id">@op.Company</option>
                }
            </InputSelect>
        </div>
    </div>
    
        <button type="submit" class="btn btn-success" @onclick="@ChangeValue">

            @ButtonText
        </button>
    

    @*<button class="btn btn-dark" @onclick="@GetBackOnePage">Back to admins</button>*@

</EditForm>


@code {
    public List<Operators> operatorsList { get; set; } = new List<Operators>();
    public string OperatorTempId { get; set; }

    public List<Customers> customersList { get; set; } = new List<Customers>();
    public string CustomerTempId { get; set; }


    protected override async Task OnInitializedAsync()
    {
        HttpClient client = new HttpClient();
        operatorsList = await client.GetFromJsonAsync<List<Operators>>("https://webapitodo20200919020315.azurewebsites.net/api/operators");
        customersList = await client.GetFromJsonAsync<List<Customers>>("https://webapitodo20200919020315.azurewebsites.net/api/customers");
        OperatorTempId = order.OperatorID.ToString();
        CustomerTempId = order.customerId.ToString();

    }

    [Parameter] public Orders order { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Spara";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    public void GetBackOnePage()
    {
        uriHelper.NavigateTo("order");
    }
    /// <summary>
    /// Rechange value of order.OperatorID back to int
    /// </summary>
    public void ChangeValue()
    {
        order.OperatorID = (int.Parse(OperatorTempId));
        order.customerId = (int.Parse(CustomerTempId));
    }
}

